// <auto-generated />
using System;
using GYM_Nutrition_Union.Persistence.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GYM_Nutrition_Union.Persistence.Migrations
{
    [DbContext(typeof(GYM_Nutrition_Context))]
    [Migration("20250418141806_dailyMacro")]
    partial class dailyMacro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserId"));

                    b.Property<string>("AppUserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppUserFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppUserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AppUserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserBodyDetail", b =>
                {
                    b.Property<int>("AppUserBodyDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserBodyDetailId"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<int>("Chest")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Hips")
                        .HasColumnType("int");

                    b.Property<int>("LeftArm")
                        .HasColumnType("int");

                    b.Property<int>("LeftCalf")
                        .HasColumnType("int");

                    b.Property<int>("LeftThigh")
                        .HasColumnType("int");

                    b.Property<int>("RightArm")
                        .HasColumnType("int");

                    b.Property<int>("RightCalf")
                        .HasColumnType("int");

                    b.Property<int>("RightThigh")
                        .HasColumnType("int");

                    b.Property<int>("Shoulder")
                        .HasColumnType("int");

                    b.Property<int>("Waist")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AppUserBodyDetailId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUsersBodyDetail");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserBodyMassIndex", b =>
                {
                    b.Property<int>("AppUserBodyMassIndexId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserBodyMassIndexId"));

                    b.Property<int>("AppUserDetailId")
                        .HasColumnType("int");

                    b.Property<decimal>("BasalMetabolicRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BodyFatPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BodyMassIndex")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LeanBodyMass")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AppUserBodyMassIndexId");

                    b.HasIndex("AppUserDetailId");

                    b.ToTable("AppUsersBodyMassIndex");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserDetail", b =>
                {
                    b.Property<int>("AppUserDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserDetailId"));

                    b.Property<string>("AfterImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("BeforeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("sex")
                        .HasColumnType("bit");

                    b.HasKey("AppUserDetailId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUsersDetail");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserExerciseProgram", b =>
                {
                    b.Property<int>("AppUserExerciseProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserExerciseProgramId"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("DayNo")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseDetailId")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseRepeat")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseSet")
                        .HasColumnType("int");

                    b.Property<int>("ExerciseTotalBurnedKcal")
                        .HasColumnType("int");

                    b.Property<decimal>("ExerciseWeight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AppUserExerciseProgramId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ExerciseDetailId");

                    b.ToTable("AppUsersExerciseProgram");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserTrainingTime", b =>
                {
                    b.Property<int>("AppUserTrainingTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppUserTrainingTimeId"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("TotalKcalBurned")
                        .HasColumnType("int");

                    b.Property<int>("TotalTrainingTime")
                        .HasColumnType("int");

                    b.HasKey("AppUserTrainingTimeId");

                    b.HasIndex("AppUserId");

                    b.ToTable("AppUsersTrainingTime");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.DailyMacro", b =>
                {
                    b.Property<int>("DailyMacroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyMacroId"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Calories")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Carbohydrates")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Fats")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Proteins")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DailyMacroId");

                    b.HasIndex("AppUserId");

                    b.ToTable("DailyMacro");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.DailyNutrition", b =>
                {
                    b.Property<int>("DailyNutritionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyNutritionID"));

                    b.Property<int>("AppUserId")
                        .HasColumnType("int");

                    b.Property<bool>("DailyNutritionStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("DailyNutritionTotalCarbohydrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyNutritionTotalFat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DailyNutritionTotalKcal")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyNutritionTotalProtein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.HasKey("DailyNutritionID");

                    b.HasIndex("AppUserId");

                    b.ToTable("DailyNutrition");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.DailyNutritionDetails", b =>
                {
                    b.Property<int>("DailyNutritionDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyNutritionDetailsId"));

                    b.Property<int>("DailyMealTime")
                        .HasColumnType("int");

                    b.Property<int>("DailyNutritionId")
                        .HasColumnType("int");

                    b.Property<decimal>("NutrientCarbohydrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NutrientFat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NutrientImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NutrientKcal")
                        .HasColumnType("int");

                    b.Property<string>("NutrientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NutrientProtein")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DailyNutritionDetailsId");

                    b.HasIndex("DailyNutritionId");

                    b.ToTable("DailyNutritionDetails");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.Exercise", b =>
                {
                    b.Property<int>("ExerciseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseId"));

                    b.Property<string>("ExerciseImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExerciseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.ExerciseDetail", b =>
                {
                    b.Property<int>("ExerciseDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExerciseDetailId"));

                    b.Property<int>("AverageKcal")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseMET")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("int");

                    b.Property<string>("Gif1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gif2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gif3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExerciseDetailId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseDetails");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.Nutrient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("calcium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("carbonhydrate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("cholestrol")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("fat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("fiber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("iron")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("kcal")
                        .HasColumnType("int");

                    b.Property<decimal>("potassium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("protein")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sodium")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("sugar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("vitamin_A")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("vitamin_C")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Nutrient");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserBodyDetail", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.AppUser", "appUser")
                        .WithMany("appUserBodyDetail")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appUser");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserBodyMassIndex", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.AppUserDetail", "AppUserDetail")
                        .WithMany("BodyMassIndex")
                        .HasForeignKey("AppUserDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUserDetail");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserDetail", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.AppUser", "AppUser")
                        .WithMany("appUserDetails")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserExerciseProgram", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.AppUser", "AppUser")
                        .WithMany("appUserExerciseProgram")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GYM_Nurition.Domain.Entities.ExerciseDetail", "exerciseDetail")
                        .WithMany("AppUserExerciseProgram")
                        .HasForeignKey("ExerciseDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("exerciseDetail");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserTrainingTime", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.AppUser", "AppUser")
                        .WithMany("appUserTrainingTime")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.DailyMacro", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.AppUser", "AppUser")
                        .WithMany("dailyMacros")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.DailyNutrition", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.AppUser", "AppUser")
                        .WithMany("dailyNutritions")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.DailyNutritionDetails", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.DailyNutrition", "DailyNutrition")
                        .WithMany("DailyNutritionDetails")
                        .HasForeignKey("DailyNutritionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyNutrition");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.ExerciseDetail", b =>
                {
                    b.HasOne("GYM_Nurition.Domain.Entities.Exercise", "Exercise")
                        .WithMany("ExerciseDetail")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUser", b =>
                {
                    b.Navigation("appUserBodyDetail");

                    b.Navigation("appUserDetails");

                    b.Navigation("appUserExerciseProgram");

                    b.Navigation("appUserTrainingTime");

                    b.Navigation("dailyMacros");

                    b.Navigation("dailyNutritions");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.AppUserDetail", b =>
                {
                    b.Navigation("BodyMassIndex");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.DailyNutrition", b =>
                {
                    b.Navigation("DailyNutritionDetails");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.Exercise", b =>
                {
                    b.Navigation("ExerciseDetail");
                });

            modelBuilder.Entity("GYM_Nurition.Domain.Entities.ExerciseDetail", b =>
                {
                    b.Navigation("AppUserExerciseProgram");
                });
#pragma warning restore 612, 618
        }
    }
}
